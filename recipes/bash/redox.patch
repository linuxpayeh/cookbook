diff -ruwN source/bashline.c source-new/bashline.c
--- source/bashline.c	2022-04-17 16:37:12.000000000 -0600
+++ source-new/bashline.c	2023-09-09 07:46:51.157322285 -0600
@@ -2645,7 +2645,7 @@
      const char *text;
      int state;
 {
-#if defined (__WIN32__) || defined (__OPENNT) || !defined (HAVE_GRP_H)
+#if defined (__WIN32__) || defined (__OPENNT) || !defined (HAVE_GRP_H) || defined(__redox__)
   return ((char *)NULL);
 #else
   static char *gname = (char *)NULL;
diff -ruwN source/builtins/ulimit.def source-new/builtins/ulimit.def
--- source/builtins/ulimit.def	2021-11-05 07:19:53.000000000 -0600
+++ source-new/builtins/ulimit.def	2023-09-09 07:46:51.157322285 -0600
@@ -609,7 +609,7 @@
       }
   else
     {
-#if defined (HAVE_RESOURCE)
+#if defined (HAVE_RESOURCE) && !defined(__redox__)
       if (getrlimit (limits[ind].parameter, &limit) < 0)
 	return -1;
 #  if defined (HPUX9)
diff -ruwN source/config-top.h source-new/config-top.h
--- source/config-top.h	2021-11-05 07:11:12.000000000 -0600
+++ source-new/config-top.h	2023-09-09 07:49:50.705526090 -0600
@@ -63,24 +63,24 @@
 /* The default value of the PATH variable. */
 #ifndef DEFAULT_PATH_VALUE
 #define DEFAULT_PATH_VALUE \
-  "/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:."
+  "/usr/local/bin;/usr/local/sbin;/usr/bin;/usr/sbin;/bin;/sbin;."
 #endif
 
 /* If you want to unconditionally set a value for PATH in every restricted
    shell, set this. */
-/* #define RBASH_STATIC_PATH_VALUE "/rbin:/usr/rbin" */
+/* #define RBASH_STATIC_PATH_VALUE "/rbin;/usr/rbin" */
 
 /* The value for PATH when invoking `command -p'.  This is only used when
    the Posix.2 confstr () function, or CS_PATH define are not present. */
 #ifndef STANDARD_UTILS_PATH
 #define STANDARD_UTILS_PATH \
-  "/bin:/usr/bin:/sbin:/usr/sbin:/etc:/usr/etc"
+  "/bin;/usr/bin;/sbin;/usr/sbin;/etc;/usr/etc"
 #endif
 
 /* The default path for enable -f */
 #ifndef DEFAULT_LOADABLE_BUILTINS_PATH
 #define DEFAULT_LOADABLE_BUILTINS_PATH \
-  "/usr/local/lib/bash:/usr/lib/bash:/opt/local/lib/bash:/usr/pkg/lib/bash:/opt/pkg/lib/bash:."
+  "/usr/local/lib/bash;/usr/lib/bash;/opt/local/lib/bash;/usr/pkg/lib/bash;/opt/pkg/lib/bash;."
 #endif
 
 /* Default primary and secondary prompt strings. */
diff -ruwN source/configure.ac source-new/configure.ac
--- source/configure.ac	2022-09-23 08:12:27.000000000 -0600
+++ source-new/configure.ac	2023-09-09 07:47:28.393364561 -0600
@@ -92,6 +92,7 @@
 *-nsk*)		opt_bash_malloc=no ;;	# HP NonStop
 *-haiku*)	opt_bash_malloc=no ;;	# Haiku OS
 *-genode*)	opt_bash_malloc=no ;;	# Genode has no sbrk
+*-redox*)	opt_bash_malloc=no ;;	# Redox OS
 esac
 
 # memory scrambling on free()
diff -ruwN source/general.c source-new/general.c
--- source/general.c	2022-11-23 15:10:12.000000000 -0700
+++ source-new/general.c	2023-09-09 07:46:51.161322290 -0600
@@ -589,6 +589,7 @@
 void
 check_dev_tty ()
 {
+#if !defined(__redox__)
   int tty_fd;
   char *tty;
 
@@ -603,6 +604,7 @@
     }
   if (tty_fd >= 0)
     close (tty_fd);
+#endif
 }
 
 /* Return 1 if PATH1 and PATH2 are the same file.  This is kind of
@@ -1031,10 +1033,10 @@
      `:'.  If I is 0, then the path has a leading colon.  Trailing colons
      are handled OK by the `else' part of the if statement; an empty
      string is returned in that case. */
-  if (i && string[i] == ':')
+  if (i && string[i] == ';')
     i++;
 
-  for (start = i; string[i] && string[i] != ':'; i++)
+  for (start = i; string[i] && string[i] != ';'; i++)
     ;
 
   *p_index = i;
diff -ruwN source/include/posixwait.h source-new/include/posixwait.h
--- source/include/posixwait.h	2019-03-29 11:25:52.000000000 -0600
+++ source-new/include/posixwait.h	2023-09-09 07:46:51.161322290 -0600
@@ -34,7 +34,7 @@
 
 /* How to get the status of a job.  For Posix, this is just an
    int, but for other systems we have to crack the union wait. */
-#if !defined (_POSIX_VERSION)
+#if 0
 typedef union wait WAIT;
 #  define WSTATUS(t)  (t.w_status)
 #else /* _POSIX_VERSION */
@@ -50,7 +50,7 @@
 
 /* More Posix P1003.1 definitions.  In the POSIX versions, the parameter is
    passed as an `int', in the non-POSIX version, as `union wait'. */
-#if defined (_POSIX_VERSION)
+#if 1
 
 #  if !defined (WSTOPSIG)
 #    define WSTOPSIG(s)       ((s) >> 8)
diff -ruwN source/lib/sh/getcwd.c source-new/lib/sh/getcwd.c
--- source/lib/sh/getcwd.c	2012-03-10 08:48:50.000000000 -0700
+++ source-new/lib/sh/getcwd.c	2023-09-09 07:46:51.161322290 -0600
@@ -20,7 +20,7 @@
 
 #include <config.h>
 
-#if !defined (HAVE_GETCWD)
+#if !defined (HAVE_GETCWD) && !defined(__redox__)
 
 #if !defined (__GNUC__) && !defined (HAVE_ALLOCA_H) && defined (_AIX)
   #pragma alloca
